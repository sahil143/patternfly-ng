{"version":3,"file":"pagination.component.js","sourceRoot":"","sources":["../../../../build/src/app/pagination/pagination.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  DoCheck,\n  OnChanges,\n  SimpleChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  OnInit\n} from '@angular/core';\n\nimport { cloneDeep, defaults, isEqual } from 'lodash';\n\nimport { PaginationConfig } from './pagination-config';\n\n/**\n * Component for rendering pagination\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-pagination',\n  template: `<div class=\"content-view-pf-pagination list-view-pf-pagination clearfix\"><div class=\"form-group\"><div class=\"padding-right-10\"><div class=\"btn-group dropdown\" dropdown><button #pageSizeMenu class=\"btn btn-default dropdown-toggle\" dropdownToggle>{{config.pageSize}} <span class=\"caret\"></span></button><ul class=\"dropdown-menu\" *dropdownMenu><li *ngFor=\"let increment of config?.pageSizeIncrements\" [ngClass]=\"{'selected': increment === config?.pageSize}\" class=\"display-length-increment\"><a role=\"menuitem\" (click)=\"onPageSizeChange($event, increment)\">{{increment}}</a></li></ul></div></div><span for=\"pageSizeMenu\" class=\"per-page-label\">per page</span></div><div class=\"form-group\"><span><span class=\"pagination-pf-item-current\">{{getCurrentPage()}}</span> of <span class=\"pagination-pf-items-total\">{{config.totalItems}}</span></span><ul class=\"pagination pagination-pf-back\"><li [ngClass]=\"{'disabled': config.pageNumber === 1}\"><a title=\"First Page\" (click)=\"gotoFirstPage()\" class=\"goto-first-page\"><span class=\"i fa fa-angle-double-left\"></span></a></li><li [ngClass]=\"{'disabled': config.pageNumber === 1}\"><a title=\"Previous Page\" (click)=\"gotoPreviousPage()\" class=\"goto-prev-page\"><span class=\"i fa fa-angle-left\"></span></a></li></ul><input type=\"text\" #pInput [ngModel]=\"config.pageNumber\" (keyup.enter)=\"onPageNumberChange($event, pInput.value)\" class=\"pagination-pf-page\" name=\"page\"> <span>of&nbsp;<span class=\"pagination-pf-pages\">{{ lastPageNumber }}</span></span><ul class=\"pagination pagination-pf-forward\"><li [ngClass]=\"{'disabled': config.pageNumber === lastPageNumber}\"><a title=\"Next Page\" (click)=\"gotoNextPage()\" class=\"goto-next-page\"><span class=\"i fa fa-angle-right\"></span></a></li><li [ngClass]=\"{'disabled': config.pageNumber === lastPageNumber}\"><a title=\"Last Page\" (click)=\"gotoLastPage()\" class=\"goto-last-page\"><span class=\"i fa fa-angle-double-right\"></span></a></li></ul></div></div>`\n})\n\nexport class PaginationComponent implements OnInit, DoCheck, OnChanges {\n\n  /**\n   * The Pagination config contaning component properties\n   */\n  @Input() config: PaginationConfig;\n\n  /**\n   * The Event is emitted when Page Size is changed\n   */\n  @Output('onPageSizeSelect') onPageSizeSelect = new EventEmitter();\n\n  /**\n   * The Event is emitted when Page Number is Changed\n   */\n  @Output('onPageNumberSelect') onPageNumberSelect = new EventEmitter();\n\n\n  private defaultConfig = {\n    pageNumber: 1,\n    pageSizeIncrements: [5, 10, 20, 40, 80, 100],\n    pageSize: 5\n  } as PaginationConfig\n  private prevConfig: PaginationConfig;\n  public lastPageNumber: number;\n\n  /**\n   * The default constructor\n   */\n  constructor() {}\n\n  // Initialization\n\n  /**\n   *  Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n    this.lastPageNumber = this.getLastPageNumber();\n  }\n\n  /**\n   *  Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n  }\n\n  /**\n   * Called when properties value are changed\n   * @param changes obj of type SimpleChanges containing old and new value\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.totalItems && !changes.totalItems.isFirstChange()) {\n      this.lastPageNumber = this.getLastPageNumber();\n      this.gotoFirstPage();\n    }\n  }\n\n  /**\n   * Setup default config\n   */\n  protected setupConfig(): void {\n    if (this.config !== undefined) {\n      defaults(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n    this.prevConfig = cloneDeep(this.config);\n  }\n\n  /**\n   * Page size is changed\n   * @param newPageSize new page size\n   */\n  private onPageSizeChange($event: Event, newPageSize: number): void {\n    this.config.pageSize = newPageSize;\n    this.lastPageNumber = this.getLastPageNumber();\n    this.gotoFirstPage();\n    this.onPageSizeSelect.emit({\n      pageSize: newPageSize\n    });\n  }\n\n  /**\n   * Page number is changed using input field\n   */\n  public onPageNumberChange($event: Event, value: string): void {\n    let newPageNumber = parseInt(value, 10);\n    if (newPageNumber > this.lastPageNumber) {\n      this.updatePageNumber(this.lastPageNumber);\n    } else if (newPageNumber < 1 || isNaN(this.config.pageNumber)) {\n      this.updatePageNumber(1);\n    } else {\n      this.updatePageNumber(newPageNumber);\n    }\n  }\n\n  /**\n   * Jump to First Page\n   */\n  public gotoFirstPage(): void {\n    if (this.config.pageNumber !== 1) {\n      this.updatePageNumber(1);\n    }\n  }\n\n  /**\n   * Go to Previous Page\n   */\n  public gotoPreviousPage(): void {\n    if (this.config.pageNumber !== 1) {\n      this.updatePageNumber(this.config.pageNumber - 1);\n    }\n  }\n\n  /**\n   * Go to Next Page\n   */\n  public gotoNextPage(): void {\n    if (this.config.pageNumber < this.lastPageNumber) {\n      this.updatePageNumber(this.config.pageNumber + 1);\n    }\n  }\n\n  /**\n   * Jump to Last Page\n   */\n  public gotoLastPage(): void {\n    if (this.config.pageNumber < this.lastPageNumber) {\n      this.updatePageNumber(this.lastPageNumber);\n    }\n  }\n\n  public getCurrentPage() {\n    return this.getStartIndex() + \" - \" + this.getEndIndex();\n  }\n\n  /**\n   * Start Index of Current Page\n   */\n  public getStartIndex(): number {\n    return this.config.totalItems ? this.config.pageSize * (this.config.pageNumber - 1) + 1 : 0;\n  }\n\n  /**\n   * End Index of Current Page\n   */\n  public getEndIndex(): number {\n    let numFullPages = Math.floor(this.config.totalItems / this.config.pageSize);\n    let numItemsOnLastPage = this.config.totalItems - (numFullPages * this.config.pageSize) || this.config.pageSize;\n    let numItemsOnPage = this.isLastPage() ? numItemsOnLastPage : this.config.pageSize;\n    return this.config.totalItems ? this.getStartIndex() + numItemsOnPage - 1 : 0;\n  }\n\n  /**\n   * Update the Page Number\n   * @param newPageNumber new page number\n   */\n  private updatePageNumber(newPageNumber: number): void {\n    this.config.pageNumber = newPageNumber;\n    this.onPageNumberSelect.emit({\n      pageNumber: newPageNumber\n    });\n  }\n\n  /**\n   * Get Last Page Number\n   */\n  private getLastPageNumber(): number {\n    return Math.ceil(this.config.totalItems / this.config.pageSize);\n  }\n\n  /**\n   * Check if current Page is Last Page\n   */\n  private isLastPage(): boolean {\n    return this.config.pageNumber === this.lastPageNumber;\n  }\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}